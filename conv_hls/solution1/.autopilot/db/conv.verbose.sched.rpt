

================================================================
== Vivado HLS Report for 'conv'
================================================================
* Date:           Mon Dec  2 16:44:23 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        conv_hls
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.742|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  6137|  6137|  6137|  6137|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Row     |  6136|  6136|       236|          -|          -|    26|    no    |
        | + Col    |   234|   234|         9|          -|          -|    26|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond1)
3 --> 
	4  / (!exitcond)
	2  / (exitcond)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	3  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%kernel_addr = getelementptr [9 x i32]* %kernel, i64 0, i64 0" [conv.cpp:24]   --->   Operation 12 'getelementptr' 'kernel_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%kernel_addr_1 = getelementptr [9 x i32]* %kernel, i64 0, i64 1" [conv.cpp:25]   --->   Operation 13 'getelementptr' 'kernel_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%kernel_addr_2 = getelementptr [9 x i32]* %kernel, i64 0, i64 2" [conv.cpp:26]   --->   Operation 14 'getelementptr' 'kernel_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%kernel_addr_3 = getelementptr [9 x i32]* %kernel, i64 0, i64 3" [conv.cpp:27]   --->   Operation 15 'getelementptr' 'kernel_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%kernel_addr_4 = getelementptr [9 x i32]* %kernel, i64 0, i64 4" [conv.cpp:28]   --->   Operation 16 'getelementptr' 'kernel_addr_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%kernel_addr_5 = getelementptr [9 x i32]* %kernel, i64 0, i64 5" [conv.cpp:29]   --->   Operation 17 'getelementptr' 'kernel_addr_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%kernel_addr_6 = getelementptr [9 x i32]* %kernel, i64 0, i64 6" [conv.cpp:30]   --->   Operation 18 'getelementptr' 'kernel_addr_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%kernel_addr_7 = getelementptr [9 x i32]* %kernel, i64 0, i64 7" [conv.cpp:31]   --->   Operation 19 'getelementptr' 'kernel_addr_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%kernel_addr_8 = getelementptr [9 x i32]* %kernel, i64 0, i64 8" [conv.cpp:32]   --->   Operation 20 'getelementptr' 'kernel_addr_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([784 x i32]* %A) nounwind, !map !7"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([9 x i32]* %kernel) nounwind, !map !13"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap([676 x i32]* %out_r) nounwind, !map !19"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @conv_str) nounwind"   --->   Operation 24 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (1.76ns)   --->   "br label %1" [conv.cpp:19]   --->   Operation 25 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.56>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%i = phi i5 [ 1, %0 ], [ %i_1, %5 ]"   --->   Operation 26 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.36ns)   --->   "%exitcond1 = icmp eq i5 %i, -5" [conv.cpp:19]   --->   Operation 27 'icmp' 'exitcond1' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 26, i64 26, i64 26) nounwind"   --->   Operation 28 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %6, label %2" [conv.cpp:19]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str) nounwind" [conv.cpp:20]   --->   Operation 30 'specloopname' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str) nounwind" [conv.cpp:20]   --->   Operation 31 'specregionbegin' 'tmp_3' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.78ns)   --->   "%tmp = add i5 %i, -1" [conv.cpp:24]   --->   Operation 32 'add' 'tmp' <Predicate = (!exitcond1)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%tmp_1_cast = zext i5 %tmp to i10" [conv.cpp:33]   --->   Operation 33 'zext' 'tmp_1_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_2 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %tmp, i5 0)" [conv.cpp:24]   --->   Operation 34 'bitconcatenate' 'tmp_2' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%p_shl4_cast = zext i10 %tmp_2 to i11" [conv.cpp:24]   --->   Operation 35 'zext' 'p_shl4_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_4 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp, i2 0)" [conv.cpp:24]   --->   Operation 36 'bitconcatenate' 'tmp_4' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%p_shl5_cast = zext i7 %tmp_4 to i11" [conv.cpp:24]   --->   Operation 37 'zext' 'p_shl5_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.73ns)   --->   "%tmp_s = sub i11 %p_shl4_cast, %p_shl5_cast" [conv.cpp:24]   --->   Operation 38 'sub' 'tmp_s' <Predicate = (!exitcond1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (3.78ns)   --->   "%tmp_1 = mul i10 %tmp_1_cast, 26" [conv.cpp:33]   --->   Operation 39 'mul' 'tmp_1' <Predicate = (!exitcond1)> <Delay = 3.78> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_6 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %i, i5 0)" [conv.cpp:30]   --->   Operation 40 'bitconcatenate' 'tmp_6' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%p_shl2_cast = zext i10 %tmp_6 to i11" [conv.cpp:30]   --->   Operation 41 'zext' 'p_shl2_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_8 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i, i2 0)" [conv.cpp:30]   --->   Operation 42 'bitconcatenate' 'tmp_8' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%p_shl3_cast = zext i7 %tmp_8 to i11" [conv.cpp:27]   --->   Operation 43 'zext' 'p_shl3_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (1.73ns)   --->   "%tmp_18 = sub i11 %p_shl2_cast, %p_shl3_cast" [conv.cpp:27]   --->   Operation 44 'sub' 'tmp_18' <Predicate = (!exitcond1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.78ns)   --->   "%i_1 = add i5 %i, 1" [conv.cpp:30]   --->   Operation 45 'add' 'i_1' <Predicate = (!exitcond1)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_19 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %i_1, i5 0)" [conv.cpp:30]   --->   Operation 46 'bitconcatenate' 'tmp_19' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%p_shl_cast = zext i10 %tmp_19 to i11" [conv.cpp:30]   --->   Operation 47 'zext' 'p_shl_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_20 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i_1, i2 0)" [conv.cpp:30]   --->   Operation 48 'bitconcatenate' 'tmp_20' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%p_shl1_cast = zext i7 %tmp_20 to i11" [conv.cpp:30]   --->   Operation 49 'zext' 'p_shl1_cast' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (1.73ns)   --->   "%tmp_21 = sub i11 %p_shl_cast, %p_shl1_cast" [conv.cpp:30]   --->   Operation 50 'sub' 'tmp_21' <Predicate = (!exitcond1)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.76ns)   --->   "br label %3" [conv.cpp:21]   --->   Operation 51 'br' <Predicate = (!exitcond1)> <Delay = 1.76>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "ret void" [conv.cpp:36]   --->   Operation 52 'ret' <Predicate = (exitcond1)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.67>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%j = phi i5 [ 1, %2 ], [ %j_1, %4 ]"   --->   Operation 53 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (1.36ns)   --->   "%exitcond = icmp eq i5 %j, -5" [conv.cpp:21]   --->   Operation 54 'icmp' 'exitcond' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.36> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 26, i64 26, i64 26) nounwind"   --->   Operation 55 'speclooptripcount' 'empty_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %5, label %4" [conv.cpp:21]   --->   Operation 56 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (1.78ns)   --->   "%tmp_5 = add i5 %j, -1" [conv.cpp:24]   --->   Operation 57 'add' 'tmp_5' <Predicate = (!exitcond)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_6_cast6 = zext i5 %tmp_5 to i10" [conv.cpp:24]   --->   Operation 58 'zext' 'tmp_6_cast6' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_6_cast = zext i5 %tmp_5 to i11" [conv.cpp:24]   --->   Operation 59 'zext' 'tmp_6_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (1.63ns)   --->   "%tmp_22 = add i11 %tmp_s, %tmp_6_cast" [conv.cpp:24]   --->   Operation 60 'add' 'tmp_22' <Predicate = (!exitcond)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_26_cast = sext i11 %tmp_22 to i64" [conv.cpp:24]   --->   Operation 61 'sext' 'tmp_26_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%A_addr = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_26_cast" [conv.cpp:24]   --->   Operation 62 'getelementptr' 'A_addr' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (1.73ns)   --->   "%tmp_25 = add i10 %tmp_1, %tmp_6_cast6" [conv.cpp:33]   --->   Operation 63 'add' 'tmp_25' <Predicate = (!exitcond)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [2/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [conv.cpp:24]   --->   Operation 64 'load' 'A_load' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_3 : Operation 65 [2/2] (2.32ns)   --->   "%kernel_load = load i32* %kernel_addr, align 4" [conv.cpp:24]   --->   Operation 65 'load' 'kernel_load' <Predicate = (!exitcond)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_8_cast = zext i5 %j to i11" [conv.cpp:25]   --->   Operation 66 'zext' 'tmp_8_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (1.63ns)   --->   "%tmp_26 = add i11 %tmp_s, %tmp_8_cast" [conv.cpp:25]   --->   Operation 67 'add' 'tmp_26' <Predicate = (!exitcond)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_30_cast = sext i11 %tmp_26 to i64" [conv.cpp:25]   --->   Operation 68 'sext' 'tmp_30_cast' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%A_addr_1 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_30_cast" [conv.cpp:25]   --->   Operation 69 'getelementptr' 'A_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_3 : Operation 70 [2/2] (3.25ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [conv.cpp:25]   --->   Operation 70 'load' 'A_load_1' <Predicate = (!exitcond)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_3 : Operation 71 [2/2] (2.32ns)   --->   "%kernel_load_1 = load i32* %kernel_addr_1, align 4" [conv.cpp:25]   --->   Operation 71 'load' 'kernel_load_1' <Predicate = (!exitcond)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str, i32 %tmp_3) nounwind" [conv.cpp:35]   --->   Operation 72 'specregionend' 'empty_3' <Predicate = (exitcond)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "br label %1" [conv.cpp:19]   --->   Operation 73 'br' <Predicate = (exitcond)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.67>
ST_4 : Operation 74 [1/1] (1.63ns)   --->   "%tmp_23 = add i11 %tmp_18, %tmp_6_cast" [conv.cpp:27]   --->   Operation 74 'add' 'tmp_23' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_27_cast = sext i11 %tmp_23 to i64" [conv.cpp:27]   --->   Operation 75 'sext' 'tmp_27_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%A_addr_3 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_27_cast" [conv.cpp:27]   --->   Operation 76 'getelementptr' 'A_addr_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/2] (3.25ns)   --->   "%A_load = load i32* %A_addr, align 4" [conv.cpp:24]   --->   Operation 77 'load' 'A_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 78 [1/2] (2.32ns)   --->   "%kernel_load = load i32* %kernel_addr, align 4" [conv.cpp:24]   --->   Operation 78 'load' 'kernel_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 79 [1/2] (3.25ns)   --->   "%A_load_1 = load i32* %A_addr_1, align 4" [conv.cpp:25]   --->   Operation 79 'load' 'A_load_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 80 [1/2] (2.32ns)   --->   "%kernel_load_1 = load i32* %kernel_addr_1, align 4" [conv.cpp:25]   --->   Operation 80 'load' 'kernel_load_1' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 81 [1/1] (1.78ns)   --->   "%j_1 = add i5 %j, 1" [conv.cpp:26]   --->   Operation 81 'add' 'j_1' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%tmp_cast = zext i5 %j_1 to i11" [conv.cpp:26]   --->   Operation 82 'zext' 'tmp_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (1.63ns)   --->   "%tmp_29 = add i11 %tmp_s, %tmp_cast" [conv.cpp:26]   --->   Operation 83 'add' 'tmp_29' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_33_cast = sext i11 %tmp_29 to i64" [conv.cpp:26]   --->   Operation 84 'sext' 'tmp_33_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%A_addr_2 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_33_cast" [conv.cpp:26]   --->   Operation 85 'getelementptr' 'A_addr_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [2/2] (3.25ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [conv.cpp:26]   --->   Operation 86 'load' 'A_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 87 [2/2] (2.32ns)   --->   "%kernel_load_2 = load i32* %kernel_addr_2, align 4" [conv.cpp:26]   --->   Operation 87 'load' 'kernel_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 88 [2/2] (3.25ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [conv.cpp:27]   --->   Operation 88 'load' 'A_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 89 [2/2] (2.32ns)   --->   "%kernel_load_3 = load i32* %kernel_addr_3, align 4" [conv.cpp:27]   --->   Operation 89 'load' 'kernel_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>

State 5 <SV = 4> <Delay = 8.51>
ST_5 : Operation 90 [1/1] (1.63ns)   --->   "%tmp_24 = add i11 %tmp_21, %tmp_6_cast" [conv.cpp:30]   --->   Operation 90 'add' 'tmp_24' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (8.51ns)   --->   "%tmp_7 = mul nsw i32 %kernel_load, %A_load" [conv.cpp:24]   --->   Operation 91 'mul' 'tmp_7' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (1.63ns)   --->   "%tmp_27 = add i11 %tmp_18, %tmp_8_cast" [conv.cpp:28]   --->   Operation 92 'add' 'tmp_27' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%tmp_31_cast = sext i11 %tmp_27 to i64" [conv.cpp:28]   --->   Operation 93 'sext' 'tmp_31_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%A_addr_4 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_31_cast" [conv.cpp:28]   --->   Operation 94 'getelementptr' 'A_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (1.63ns)   --->   "%tmp_28 = add i11 %tmp_21, %tmp_8_cast" [conv.cpp:31]   --->   Operation 95 'add' 'tmp_28' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 96 [1/1] (8.51ns)   --->   "%tmp_9 = mul nsw i32 %kernel_load_1, %A_load_1" [conv.cpp:25]   --->   Operation 96 'mul' 'tmp_9' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (1.63ns)   --->   "%tmp_30 = add i11 %tmp_18, %tmp_cast" [conv.cpp:29]   --->   Operation 97 'add' 'tmp_30' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%tmp_34_cast = sext i11 %tmp_30 to i64" [conv.cpp:29]   --->   Operation 98 'sext' 'tmp_34_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%A_addr_5 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_34_cast" [conv.cpp:29]   --->   Operation 99 'getelementptr' 'A_addr_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (1.63ns)   --->   "%tmp_31 = add i11 %tmp_21, %tmp_cast" [conv.cpp:32]   --->   Operation 100 'add' 'tmp_31' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [1/2] (3.25ns)   --->   "%A_load_2 = load i32* %A_addr_2, align 4" [conv.cpp:26]   --->   Operation 101 'load' 'A_load_2' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_5 : Operation 102 [1/2] (2.32ns)   --->   "%kernel_load_2 = load i32* %kernel_addr_2, align 4" [conv.cpp:26]   --->   Operation 102 'load' 'kernel_load_2' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_5 : Operation 103 [1/2] (3.25ns)   --->   "%A_load_3 = load i32* %A_addr_3, align 4" [conv.cpp:27]   --->   Operation 103 'load' 'A_load_3' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_5 : Operation 104 [1/2] (2.32ns)   --->   "%kernel_load_3 = load i32* %kernel_addr_3, align 4" [conv.cpp:27]   --->   Operation 104 'load' 'kernel_load_3' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_5 : Operation 105 [2/2] (3.25ns)   --->   "%A_load_4 = load i32* %A_addr_4, align 4" [conv.cpp:28]   --->   Operation 105 'load' 'A_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_5 : Operation 106 [2/2] (2.32ns)   --->   "%kernel_load_4 = load i32* %kernel_addr_4, align 4" [conv.cpp:28]   --->   Operation 106 'load' 'kernel_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_5 : Operation 107 [2/2] (3.25ns)   --->   "%A_load_5 = load i32* %A_addr_5, align 4" [conv.cpp:29]   --->   Operation 107 'load' 'A_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_5 : Operation 108 [2/2] (2.32ns)   --->   "%kernel_load_5 = load i32* %kernel_addr_5, align 4" [conv.cpp:29]   --->   Operation 108 'load' 'kernel_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>

State 6 <SV = 5> <Delay = 8.51>
ST_6 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_28_cast = sext i11 %tmp_24 to i64" [conv.cpp:30]   --->   Operation 109 'sext' 'tmp_28_cast' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%A_addr_6 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_28_cast" [conv.cpp:30]   --->   Operation 110 'getelementptr' 'A_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (8.51ns)   --->   "%tmp_10 = mul nsw i32 %kernel_load_2, %A_load_2" [conv.cpp:26]   --->   Operation 111 'mul' 'tmp_10' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 112 [1/1] (8.51ns)   --->   "%tmp_11 = mul nsw i32 %kernel_load_3, %A_load_3" [conv.cpp:27]   --->   Operation 112 'mul' 'tmp_11' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 113 [1/2] (3.25ns)   --->   "%A_load_4 = load i32* %A_addr_4, align 4" [conv.cpp:28]   --->   Operation 113 'load' 'A_load_4' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_6 : Operation 114 [1/2] (2.32ns)   --->   "%kernel_load_4 = load i32* %kernel_addr_4, align 4" [conv.cpp:28]   --->   Operation 114 'load' 'kernel_load_4' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_6 : Operation 115 [1/2] (3.25ns)   --->   "%A_load_5 = load i32* %A_addr_5, align 4" [conv.cpp:29]   --->   Operation 115 'load' 'A_load_5' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_6 : Operation 116 [1/2] (2.32ns)   --->   "%kernel_load_5 = load i32* %kernel_addr_5, align 4" [conv.cpp:29]   --->   Operation 116 'load' 'kernel_load_5' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_6 : Operation 117 [2/2] (3.25ns)   --->   "%A_load_6 = load i32* %A_addr_6, align 4" [conv.cpp:30]   --->   Operation 117 'load' 'A_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_6 : Operation 118 [2/2] (2.32ns)   --->   "%kernel_load_6 = load i32* %kernel_addr_6, align 4" [conv.cpp:30]   --->   Operation 118 'load' 'kernel_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_6 : Operation 119 [1/1] (2.55ns)   --->   "%tmp2 = add i32 %tmp_9, %tmp_7" [conv.cpp:32]   --->   Operation 119 'add' 'tmp2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 8.51>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "%tmp_32_cast = sext i11 %tmp_28 to i64" [conv.cpp:31]   --->   Operation 120 'sext' 'tmp_32_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "%A_addr_7 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_32_cast" [conv.cpp:31]   --->   Operation 121 'getelementptr' 'A_addr_7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%tmp_35_cast = sext i11 %tmp_31 to i64" [conv.cpp:32]   --->   Operation 122 'sext' 'tmp_35_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "%A_addr_8 = getelementptr [784 x i32]* %A, i64 0, i64 %tmp_35_cast" [conv.cpp:32]   --->   Operation 123 'getelementptr' 'A_addr_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (8.51ns)   --->   "%tmp_12 = mul nsw i32 %kernel_load_4, %A_load_4" [conv.cpp:28]   --->   Operation 124 'mul' 'tmp_12' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 125 [1/1] (8.51ns)   --->   "%tmp_13 = mul nsw i32 %kernel_load_5, %A_load_5" [conv.cpp:29]   --->   Operation 125 'mul' 'tmp_13' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 126 [1/2] (3.25ns)   --->   "%A_load_6 = load i32* %A_addr_6, align 4" [conv.cpp:30]   --->   Operation 126 'load' 'A_load_6' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_7 : Operation 127 [1/2] (2.32ns)   --->   "%kernel_load_6 = load i32* %kernel_addr_6, align 4" [conv.cpp:30]   --->   Operation 127 'load' 'kernel_load_6' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_7 : Operation 128 [2/2] (3.25ns)   --->   "%A_load_7 = load i32* %A_addr_7, align 4" [conv.cpp:31]   --->   Operation 128 'load' 'A_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_7 : Operation 129 [2/2] (2.32ns)   --->   "%kernel_load_7 = load i32* %kernel_addr_7, align 4" [conv.cpp:31]   --->   Operation 129 'load' 'kernel_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_7 : Operation 130 [2/2] (3.25ns)   --->   "%A_load_8 = load i32* %A_addr_8, align 4" [conv.cpp:32]   --->   Operation 130 'load' 'A_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_7 : Operation 131 [2/2] (2.32ns)   --->   "%kernel_load_8 = load i32* %kernel_addr_8, align 4" [conv.cpp:32]   --->   Operation 131 'load' 'kernel_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_7 : Operation 132 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp3 = add i32 %tmp_11, %tmp_10" [conv.cpp:32]   --->   Operation 132 'add' 'tmp3' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 133 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp1 = add i32 %tmp2, %tmp3" [conv.cpp:32]   --->   Operation 133 'add' 'tmp1' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 8.51>
ST_8 : Operation 134 [1/1] (8.51ns)   --->   "%tmp_14 = mul nsw i32 %kernel_load_6, %A_load_6" [conv.cpp:30]   --->   Operation 134 'mul' 'tmp_14' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 135 [1/2] (3.25ns)   --->   "%A_load_7 = load i32* %A_addr_7, align 4" [conv.cpp:31]   --->   Operation 135 'load' 'A_load_7' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_8 : Operation 136 [1/2] (2.32ns)   --->   "%kernel_load_7 = load i32* %kernel_addr_7, align 4" [conv.cpp:31]   --->   Operation 136 'load' 'kernel_load_7' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_8 : Operation 137 [1/2] (3.25ns)   --->   "%A_load_8 = load i32* %A_addr_8, align 4" [conv.cpp:32]   --->   Operation 137 'load' 'A_load_8' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_8 : Operation 138 [1/2] (2.32ns)   --->   "%kernel_load_8 = load i32* %kernel_addr_8, align 4" [conv.cpp:32]   --->   Operation 138 'load' 'kernel_load_8' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_8 : Operation 139 [1/1] (2.55ns)   --->   "%tmp5 = add i32 %tmp_13, %tmp_12" [conv.cpp:32]   --->   Operation 139 'add' 'tmp5' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 8.51>
ST_9 : Operation 140 [1/1] (8.51ns)   --->   "%tmp_15 = mul nsw i32 %kernel_load_7, %A_load_7" [conv.cpp:31]   --->   Operation 140 'mul' 'tmp_15' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 141 [1/1] (8.51ns)   --->   "%tmp_16 = mul nsw i32 %kernel_load_8, %A_load_8" [conv.cpp:32]   --->   Operation 141 'mul' 'tmp_16' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 8.74>
ST_10 : Operation 142 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp7 = add i32 %tmp_16, %tmp_15" [conv.cpp:32]   --->   Operation 142 'add' 'tmp7' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 143 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp6 = add i32 %tmp_14, %tmp7" [conv.cpp:32]   --->   Operation 143 'add' 'tmp6' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 144 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp4 = add i32 %tmp5, %tmp6" [conv.cpp:32]   --->   Operation 144 'add' 'tmp4' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_10 : Operation 145 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp_17 = add i32 %tmp1, %tmp4" [conv.cpp:32]   --->   Operation 145 'add' 'tmp_17' <Predicate = true> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str1) nounwind" [conv.cpp:22]   --->   Operation 146 'specloopname' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_29_cast = zext i10 %tmp_25 to i64" [conv.cpp:33]   --->   Operation 147 'zext' 'tmp_29_cast' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 148 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [676 x i32]* %out_r, i64 0, i64 %tmp_29_cast" [conv.cpp:33]   --->   Operation 148 'getelementptr' 'out_addr' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 149 [1/1] (3.25ns)   --->   "store i32 %tmp_17, i32* %out_addr, align 4" [conv.cpp:33]   --->   Operation 149 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_11 : Operation 150 [1/1] (0.00ns)   --->   "br label %3" [conv.cpp:21]   --->   Operation 150 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', conv.cpp:30) [19]  (1.77 ns)

 <State 2>: 5.56ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', conv.cpp:30) [19]  (0 ns)
	'add' operation ('tmp', conv.cpp:24) [26]  (1.78 ns)
	'mul' operation ('tmp_1', conv.cpp:33) [33]  (3.78 ns)

 <State 3>: 6.67ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', conv.cpp:26) [47]  (0 ns)
	'add' operation ('tmp_5', conv.cpp:24) [53]  (1.78 ns)
	'add' operation ('tmp_22', conv.cpp:24) [56]  (1.64 ns)
	'getelementptr' operation ('A_addr', conv.cpp:24) [58]  (0 ns)
	'load' operation ('A_load', conv.cpp:24) on array 'A' [68]  (3.25 ns)

 <State 4>: 6.67ns
The critical path consists of the following:
	'add' operation ('j', conv.cpp:26) [84]  (1.78 ns)
	'add' operation ('tmp_29', conv.cpp:26) [86]  (1.64 ns)
	'getelementptr' operation ('A_addr_2', conv.cpp:26) [88]  (0 ns)
	'load' operation ('A_load_2', conv.cpp:26) on array 'A' [95]  (3.25 ns)

 <State 5>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp', conv.cpp:24) [70]  (8.51 ns)

 <State 6>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_10', conv.cpp:26) [97]  (8.51 ns)

 <State 7>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_12', conv.cpp:28) [103]  (8.51 ns)

 <State 8>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_14', conv.cpp:30) [109]  (8.51 ns)

 <State 9>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_15', conv.cpp:31) [112]  (8.51 ns)

 <State 10>: 8.74ns
The critical path consists of the following:
	'add' operation ('tmp7', conv.cpp:32) [120]  (0 ns)
	'add' operation ('tmp6', conv.cpp:32) [121]  (4.37 ns)
	'add' operation ('tmp4', conv.cpp:32) [122]  (0 ns)
	'add' operation ('tmp', conv.cpp:32) [123]  (4.37 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('out_addr', conv.cpp:33) [67]  (0 ns)
	'store' operation (conv.cpp:33) of variable 'tmp', conv.cpp:32 on array 'out_r' [124]  (3.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
