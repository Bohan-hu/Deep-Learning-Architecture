// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> conv::ap_ST_fsm_state1 = "1";
const sc_lv<11> conv::ap_ST_fsm_state2 = "10";
const sc_lv<11> conv::ap_ST_fsm_state3 = "100";
const sc_lv<11> conv::ap_ST_fsm_state4 = "1000";
const sc_lv<11> conv::ap_ST_fsm_state5 = "10000";
const sc_lv<11> conv::ap_ST_fsm_state6 = "100000";
const sc_lv<11> conv::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> conv::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> conv::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> conv::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> conv::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> conv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv::ap_const_lv32_3 = "11";
const sc_lv<32> conv::ap_const_lv32_4 = "100";
const sc_lv<32> conv::ap_const_lv32_5 = "101";
const sc_lv<32> conv::ap_const_lv32_6 = "110";
const sc_lv<32> conv::ap_const_lv32_7 = "111";
const sc_lv<32> conv::ap_const_lv32_8 = "1000";
const sc_lv<32> conv::ap_const_lv32_1 = "1";
const sc_lv<1> conv::ap_const_lv1_0 = "0";
const sc_lv<32> conv::ap_const_lv32_2 = "10";
const sc_lv<32> conv::ap_const_lv32_9 = "1001";
const sc_lv<5> conv::ap_const_lv5_1 = "1";
const sc_lv<1> conv::ap_const_lv1_1 = "1";
const sc_lv<32> conv::ap_const_lv32_A = "1010";
const sc_lv<64> conv::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> conv::ap_const_lv64_1 = "1";
const sc_lv<64> conv::ap_const_lv64_2 = "10";
const sc_lv<64> conv::ap_const_lv64_3 = "11";
const sc_lv<64> conv::ap_const_lv64_4 = "100";
const sc_lv<64> conv::ap_const_lv64_5 = "101";
const sc_lv<64> conv::ap_const_lv64_6 = "110";
const sc_lv<64> conv::ap_const_lv64_7 = "111";
const sc_lv<64> conv::ap_const_lv64_8 = "1000";
const sc_lv<5> conv::ap_const_lv5_1B = "11011";
const sc_lv<5> conv::ap_const_lv5_1F = "11111";
const sc_lv<5> conv::ap_const_lv5_0 = "00000";
const sc_lv<2> conv::ap_const_lv2_0 = "00";
const sc_lv<10> conv::ap_const_lv10_1A = "11010";
const bool conv::ap_const_boolean_1 = true;

conv::conv(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_26_cast_fu_451_p1 );
    sensitive << ( tmp_33_cast_fu_499_p1 );
    sensitive << ( tmp_31_cast_fu_512_p1 );
    sensitive << ( tmp_28_cast_fu_534_p1 );
    sensitive << ( tmp_35_cast_fu_542_p1 );

    SC_METHOD(thread_A_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_30_cast_fu_470_p1 );
    sensitive << ( tmp_27_cast_fu_479_p1 );
    sensitive << ( tmp_34_cast_fu_525_p1 );
    sensitive << ( tmp_32_cast_fu_538_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_308_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_308_p2 );

    SC_METHOD(thread_exitcond1_fu_308_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_235 );

    SC_METHOD(thread_exitcond_fu_426_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_246 );

    SC_METHOD(thread_grp_fu_278_p2);
    sensitive << ( reg_258 );
    sensitive << ( reg_263 );

    SC_METHOD(thread_grp_fu_284_p2);
    sensitive << ( reg_268 );
    sensitive << ( reg_273 );

    SC_METHOD(thread_grp_fu_298_p2);
    sensitive << ( reg_290 );
    sensitive << ( reg_294 );

    SC_METHOD(thread_i_1_fu_390_p2);
    sensitive << ( i_reg_235 );

    SC_METHOD(thread_j_1_fu_484_p2);
    sensitive << ( j_reg_246 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_kernel_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_kernel_ce1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( tmp_29_cast_fu_580_p1 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( tmp_17_reg_764 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_p_shl1_cast_fu_416_p1);
    sensitive << ( tmp_20_fu_408_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_368_p1);
    sensitive << ( tmp_6_fu_360_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_380_p1);
    sensitive << ( tmp_8_fu_372_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_332_p1);
    sensitive << ( tmp_2_fu_324_p3 );

    SC_METHOD(thread_p_shl5_cast_fu_344_p1);
    sensitive << ( tmp_4_fu_336_p3 );

    SC_METHOD(thread_p_shl_cast_fu_404_p1);
    sensitive << ( tmp_19_fu_396_p3 );

    SC_METHOD(thread_tmp1_fu_552_p2);
    sensitive << ( reg_304 );
    sensitive << ( tmp3_fu_546_p2 );

    SC_METHOD(thread_tmp3_fu_546_p2);
    sensitive << ( reg_290 );
    sensitive << ( reg_294 );

    SC_METHOD(thread_tmp4_fu_569_p2);
    sensitive << ( reg_304 );
    sensitive << ( tmp6_fu_563_p2 );

    SC_METHOD(thread_tmp6_fu_563_p2);
    sensitive << ( reg_290 );
    sensitive << ( tmp7_fu_558_p2 );

    SC_METHOD(thread_tmp7_fu_558_p2);
    sensitive << ( reg_294 );
    sensitive << ( tmp_15_reg_759 );

    SC_METHOD(thread_tmp_17_fu_575_p2);
    sensitive << ( tmp1_reg_754 );
    sensitive << ( tmp4_fu_569_p2 );

    SC_METHOD(thread_tmp_18_fu_384_p2);
    sensitive << ( p_shl2_cast_fu_368_p1 );
    sensitive << ( p_shl3_cast_fu_380_p1 );

    SC_METHOD(thread_tmp_19_fu_396_p3);
    sensitive << ( i_1_fu_390_p2 );

    SC_METHOD(thread_tmp_1_fu_354_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_fu_354_p00 );

    SC_METHOD(thread_tmp_1_fu_354_p00);
    sensitive << ( tmp_fu_314_p2 );

    SC_METHOD(thread_tmp_1_fu_354_p2);
    sensitive << ( tmp_1_fu_354_p0 );

    SC_METHOD(thread_tmp_20_fu_408_p3);
    sensitive << ( i_1_fu_390_p2 );

    SC_METHOD(thread_tmp_21_fu_420_p2);
    sensitive << ( p_shl_cast_fu_404_p1 );
    sensitive << ( p_shl1_cast_fu_416_p1 );

    SC_METHOD(thread_tmp_22_fu_446_p2);
    sensitive << ( tmp_s_reg_632 );
    sensitive << ( tmp_6_cast_fu_442_p1 );

    SC_METHOD(thread_tmp_23_fu_475_p2);
    sensitive << ( tmp_18_reg_644 );
    sensitive << ( tmp_6_cast_reg_666 );

    SC_METHOD(thread_tmp_24_fu_504_p2);
    sensitive << ( tmp_21_reg_656 );
    sensitive << ( tmp_6_cast_reg_666 );

    SC_METHOD(thread_tmp_25_fu_456_p2);
    sensitive << ( tmp_1_reg_639 );
    sensitive << ( tmp_6_cast6_fu_438_p1 );

    SC_METHOD(thread_tmp_26_cast_fu_451_p1);
    sensitive << ( tmp_22_fu_446_p2 );

    SC_METHOD(thread_tmp_26_fu_465_p2);
    sensitive << ( tmp_s_reg_632 );
    sensitive << ( tmp_8_cast_fu_461_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_479_p1);
    sensitive << ( tmp_23_fu_475_p2 );

    SC_METHOD(thread_tmp_27_fu_508_p2);
    sensitive << ( tmp_18_reg_644 );
    sensitive << ( tmp_8_cast_reg_682 );

    SC_METHOD(thread_tmp_28_cast_fu_534_p1);
    sensitive << ( tmp_24_reg_714 );

    SC_METHOD(thread_tmp_28_fu_517_p2);
    sensitive << ( tmp_21_reg_656 );
    sensitive << ( tmp_8_cast_reg_682 );

    SC_METHOD(thread_tmp_29_cast_fu_580_p1);
    sensitive << ( tmp_25_reg_677 );

    SC_METHOD(thread_tmp_29_fu_494_p2);
    sensitive << ( tmp_s_reg_632 );
    sensitive << ( tmp_cast_fu_490_p1 );

    SC_METHOD(thread_tmp_2_fu_324_p3);
    sensitive << ( tmp_fu_314_p2 );

    SC_METHOD(thread_tmp_30_cast_fu_470_p1);
    sensitive << ( tmp_26_fu_465_p2 );

    SC_METHOD(thread_tmp_30_fu_521_p2);
    sensitive << ( tmp_18_reg_644 );
    sensitive << ( tmp_cast_reg_703 );

    SC_METHOD(thread_tmp_31_cast_fu_512_p1);
    sensitive << ( tmp_27_fu_508_p2 );

    SC_METHOD(thread_tmp_31_fu_530_p2);
    sensitive << ( tmp_21_reg_656 );
    sensitive << ( tmp_cast_reg_703 );

    SC_METHOD(thread_tmp_32_cast_fu_538_p1);
    sensitive << ( tmp_28_reg_724 );

    SC_METHOD(thread_tmp_33_cast_fu_499_p1);
    sensitive << ( tmp_29_fu_494_p2 );

    SC_METHOD(thread_tmp_34_cast_fu_525_p1);
    sensitive << ( tmp_30_fu_521_p2 );

    SC_METHOD(thread_tmp_35_cast_fu_542_p1);
    sensitive << ( tmp_31_reg_734 );

    SC_METHOD(thread_tmp_4_fu_336_p3);
    sensitive << ( tmp_fu_314_p2 );

    SC_METHOD(thread_tmp_5_fu_432_p2);
    sensitive << ( j_reg_246 );

    SC_METHOD(thread_tmp_6_cast6_fu_438_p1);
    sensitive << ( tmp_5_fu_432_p2 );

    SC_METHOD(thread_tmp_6_cast_fu_442_p1);
    sensitive << ( tmp_5_fu_432_p2 );

    SC_METHOD(thread_tmp_6_fu_360_p3);
    sensitive << ( i_reg_235 );

    SC_METHOD(thread_tmp_8_cast_fu_461_p1);
    sensitive << ( j_reg_246 );

    SC_METHOD(thread_tmp_8_fu_372_p3);
    sensitive << ( i_reg_235 );

    SC_METHOD(thread_tmp_cast_fu_490_p1);
    sensitive << ( j_1_fu_484_p2 );

    SC_METHOD(thread_tmp_fu_314_p2);
    sensitive << ( i_reg_235 );

    SC_METHOD(thread_tmp_s_fu_348_p2);
    sensitive << ( p_shl4_cast_fu_332_p1 );
    sensitive << ( p_shl5_cast_fu_344_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_308_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_426_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, kernel_address1, "(port)kernel_address1");
    sc_trace(mVcdFile, kernel_ce1, "(port)kernel_ce1");
    sc_trace(mVcdFile, kernel_q1, "(port)kernel_q1");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_258, "reg_258");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, reg_263, "reg_263");
    sc_trace(mVcdFile, reg_268, "reg_268");
    sc_trace(mVcdFile, reg_273, "reg_273");
    sc_trace(mVcdFile, grp_fu_278_p2, "grp_fu_278_p2");
    sc_trace(mVcdFile, reg_290, "reg_290");
    sc_trace(mVcdFile, grp_fu_284_p2, "grp_fu_284_p2");
    sc_trace(mVcdFile, reg_294, "reg_294");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_298_p2, "grp_fu_298_p2");
    sc_trace(mVcdFile, reg_304, "reg_304");
    sc_trace(mVcdFile, tmp_s_fu_348_p2, "tmp_s_fu_348_p2");
    sc_trace(mVcdFile, tmp_s_reg_632, "tmp_s_reg_632");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, exitcond1_fu_308_p2, "exitcond1_fu_308_p2");
    sc_trace(mVcdFile, tmp_1_fu_354_p2, "tmp_1_fu_354_p2");
    sc_trace(mVcdFile, tmp_1_reg_639, "tmp_1_reg_639");
    sc_trace(mVcdFile, tmp_18_fu_384_p2, "tmp_18_fu_384_p2");
    sc_trace(mVcdFile, tmp_18_reg_644, "tmp_18_reg_644");
    sc_trace(mVcdFile, i_1_fu_390_p2, "i_1_fu_390_p2");
    sc_trace(mVcdFile, i_1_reg_651, "i_1_reg_651");
    sc_trace(mVcdFile, tmp_21_fu_420_p2, "tmp_21_fu_420_p2");
    sc_trace(mVcdFile, tmp_21_reg_656, "tmp_21_reg_656");
    sc_trace(mVcdFile, tmp_6_cast_fu_442_p1, "tmp_6_cast_fu_442_p1");
    sc_trace(mVcdFile, tmp_6_cast_reg_666, "tmp_6_cast_reg_666");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_fu_426_p2, "exitcond_fu_426_p2");
    sc_trace(mVcdFile, tmp_25_fu_456_p2, "tmp_25_fu_456_p2");
    sc_trace(mVcdFile, tmp_25_reg_677, "tmp_25_reg_677");
    sc_trace(mVcdFile, tmp_8_cast_fu_461_p1, "tmp_8_cast_fu_461_p1");
    sc_trace(mVcdFile, tmp_8_cast_reg_682, "tmp_8_cast_reg_682");
    sc_trace(mVcdFile, j_1_fu_484_p2, "j_1_fu_484_p2");
    sc_trace(mVcdFile, j_1_reg_698, "j_1_reg_698");
    sc_trace(mVcdFile, tmp_cast_fu_490_p1, "tmp_cast_fu_490_p1");
    sc_trace(mVcdFile, tmp_cast_reg_703, "tmp_cast_reg_703");
    sc_trace(mVcdFile, tmp_24_fu_504_p2, "tmp_24_fu_504_p2");
    sc_trace(mVcdFile, tmp_24_reg_714, "tmp_24_reg_714");
    sc_trace(mVcdFile, tmp_28_fu_517_p2, "tmp_28_fu_517_p2");
    sc_trace(mVcdFile, tmp_28_reg_724, "tmp_28_reg_724");
    sc_trace(mVcdFile, tmp_31_fu_530_p2, "tmp_31_fu_530_p2");
    sc_trace(mVcdFile, tmp_31_reg_734, "tmp_31_reg_734");
    sc_trace(mVcdFile, tmp1_fu_552_p2, "tmp1_fu_552_p2");
    sc_trace(mVcdFile, tmp1_reg_754, "tmp1_reg_754");
    sc_trace(mVcdFile, tmp_15_reg_759, "tmp_15_reg_759");
    sc_trace(mVcdFile, tmp_17_fu_575_p2, "tmp_17_fu_575_p2");
    sc_trace(mVcdFile, tmp_17_reg_764, "tmp_17_reg_764");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i_reg_235, "i_reg_235");
    sc_trace(mVcdFile, j_reg_246, "j_reg_246");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_26_cast_fu_451_p1, "tmp_26_cast_fu_451_p1");
    sc_trace(mVcdFile, tmp_30_cast_fu_470_p1, "tmp_30_cast_fu_470_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_479_p1, "tmp_27_cast_fu_479_p1");
    sc_trace(mVcdFile, tmp_33_cast_fu_499_p1, "tmp_33_cast_fu_499_p1");
    sc_trace(mVcdFile, tmp_31_cast_fu_512_p1, "tmp_31_cast_fu_512_p1");
    sc_trace(mVcdFile, tmp_34_cast_fu_525_p1, "tmp_34_cast_fu_525_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_534_p1, "tmp_28_cast_fu_534_p1");
    sc_trace(mVcdFile, tmp_32_cast_fu_538_p1, "tmp_32_cast_fu_538_p1");
    sc_trace(mVcdFile, tmp_35_cast_fu_542_p1, "tmp_35_cast_fu_542_p1");
    sc_trace(mVcdFile, tmp_29_cast_fu_580_p1, "tmp_29_cast_fu_580_p1");
    sc_trace(mVcdFile, tmp_fu_314_p2, "tmp_fu_314_p2");
    sc_trace(mVcdFile, tmp_2_fu_324_p3, "tmp_2_fu_324_p3");
    sc_trace(mVcdFile, tmp_4_fu_336_p3, "tmp_4_fu_336_p3");
    sc_trace(mVcdFile, p_shl4_cast_fu_332_p1, "p_shl4_cast_fu_332_p1");
    sc_trace(mVcdFile, p_shl5_cast_fu_344_p1, "p_shl5_cast_fu_344_p1");
    sc_trace(mVcdFile, tmp_1_fu_354_p0, "tmp_1_fu_354_p0");
    sc_trace(mVcdFile, tmp_6_fu_360_p3, "tmp_6_fu_360_p3");
    sc_trace(mVcdFile, tmp_8_fu_372_p3, "tmp_8_fu_372_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_368_p1, "p_shl2_cast_fu_368_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_380_p1, "p_shl3_cast_fu_380_p1");
    sc_trace(mVcdFile, tmp_19_fu_396_p3, "tmp_19_fu_396_p3");
    sc_trace(mVcdFile, tmp_20_fu_408_p3, "tmp_20_fu_408_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_404_p1, "p_shl_cast_fu_404_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_416_p1, "p_shl1_cast_fu_416_p1");
    sc_trace(mVcdFile, tmp_5_fu_432_p2, "tmp_5_fu_432_p2");
    sc_trace(mVcdFile, tmp_22_fu_446_p2, "tmp_22_fu_446_p2");
    sc_trace(mVcdFile, tmp_6_cast6_fu_438_p1, "tmp_6_cast6_fu_438_p1");
    sc_trace(mVcdFile, tmp_26_fu_465_p2, "tmp_26_fu_465_p2");
    sc_trace(mVcdFile, tmp_23_fu_475_p2, "tmp_23_fu_475_p2");
    sc_trace(mVcdFile, tmp_29_fu_494_p2, "tmp_29_fu_494_p2");
    sc_trace(mVcdFile, tmp_27_fu_508_p2, "tmp_27_fu_508_p2");
    sc_trace(mVcdFile, tmp_30_fu_521_p2, "tmp_30_fu_521_p2");
    sc_trace(mVcdFile, tmp3_fu_546_p2, "tmp3_fu_546_p2");
    sc_trace(mVcdFile, tmp7_fu_558_p2, "tmp7_fu_558_p2");
    sc_trace(mVcdFile, tmp6_fu_563_p2, "tmp6_fu_563_p2");
    sc_trace(mVcdFile, tmp4_fu_569_p2, "tmp4_fu_569_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_1_fu_354_p00, "tmp_1_fu_354_p00");
#endif

    }
    mHdltvinHandle.open("conv.hdltvin.dat");
    mHdltvoutHandle.open("conv.hdltvout.dat");
}

conv::~conv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void conv::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_1))) {
        i_reg_235 = i_1_reg_651.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_235 = ap_const_lv5_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_reg_246 = j_1_reg_698.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond1_fu_308_p2.read(), ap_const_lv1_0))) {
        j_reg_246 = ap_const_lv5_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        reg_258 = A_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        reg_258 = A_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        reg_263 = kernel_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        reg_263 = kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        reg_268 = A_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_268 = A_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        reg_273 = kernel_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_273 = kernel_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_308_p2.read(), ap_const_lv1_0))) {
        i_1_reg_651 = i_1_fu_390_p2.read();
        tmp_18_reg_644 = tmp_18_fu_384_p2.read();
        tmp_1_reg_639 = tmp_1_fu_354_p2.read();
        tmp_21_reg_656 = tmp_21_fu_420_p2.read();
        tmp_s_reg_632 = tmp_s_fu_348_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_1_reg_698 = j_1_fu_484_p2.read();
        tmp_cast_reg_703 = tmp_cast_fu_490_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        reg_290 = grp_fu_278_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        reg_294 = grp_fu_284_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        reg_304 = grp_fu_298_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        tmp1_reg_754 = tmp1_fu_552_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_15_reg_759 = grp_fu_278_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_17_reg_764 = tmp_17_fu_575_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_24_reg_714 = tmp_24_fu_504_p2.read();
        tmp_28_reg_724 = tmp_28_fu_517_p2.read();
        tmp_31_reg_734 = tmp_31_fu_530_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_426_p2.read()))) {
        tmp_25_reg_677 = tmp_25_fu_456_p2.read();
        tmp_6_cast_reg_666 = tmp_6_cast_fu_442_p1.read();
        tmp_8_cast_reg_682 = tmp_8_cast_fu_461_p1.read();
    }
}

void conv::thread_A_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_address0 =  (sc_lv<10>) (tmp_35_cast_fu_542_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        A_address0 =  (sc_lv<10>) (tmp_28_cast_fu_534_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        A_address0 =  (sc_lv<10>) (tmp_31_cast_fu_512_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address0 =  (sc_lv<10>) (tmp_33_cast_fu_499_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_address0 =  (sc_lv<10>) (tmp_26_cast_fu_451_p1.read());
    } else {
        A_address0 = "XXXXXXXXXX";
    }
}

void conv::thread_A_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        A_address1 =  (sc_lv<10>) (tmp_32_cast_fu_538_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        A_address1 =  (sc_lv<10>) (tmp_34_cast_fu_525_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        A_address1 =  (sc_lv<10>) (tmp_27_cast_fu_479_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_address1 =  (sc_lv<10>) (tmp_30_cast_fu_470_p1.read());
    } else {
        A_address1 = "XXXXXXXXXX";
    }
}

void conv::thread_A_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void conv::thread_A_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        A_ce1 = ap_const_logic_1;
    } else {
        A_ce1 = ap_const_logic_0;
    }
}

void conv::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void conv::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void conv::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_308_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_308_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv::thread_exitcond1_fu_308_p2() {
    exitcond1_fu_308_p2 = (!i_reg_235.read().is_01() || !ap_const_lv5_1B.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_235.read() == ap_const_lv5_1B);
}

void conv::thread_exitcond_fu_426_p2() {
    exitcond_fu_426_p2 = (!j_reg_246.read().is_01() || !ap_const_lv5_1B.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_246.read() == ap_const_lv5_1B);
}

void conv::thread_grp_fu_278_p2() {
    grp_fu_278_p2 = (!reg_263.read().is_01() || !reg_258.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_263.read()) * sc_bigint<32>(reg_258.read());
}

void conv::thread_grp_fu_284_p2() {
    grp_fu_284_p2 = (!reg_273.read().is_01() || !reg_268.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_273.read()) * sc_bigint<32>(reg_268.read());
}

void conv::thread_grp_fu_298_p2() {
    grp_fu_298_p2 = (!reg_294.read().is_01() || !reg_290.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_294.read()) + sc_biguint<32>(reg_290.read()));
}

void conv::thread_i_1_fu_390_p2() {
    i_1_fu_390_p2 = (!i_reg_235.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_235.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv::thread_j_1_fu_484_p2() {
    j_1_fu_484_p2 = (!j_reg_246.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_246.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv::thread_kernel_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        kernel_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        kernel_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void conv::thread_kernel_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        kernel_address1 =  (sc_lv<4>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        kernel_address1 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        kernel_address1 =  (sc_lv<4>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        kernel_address1 =  (sc_lv<4>) (ap_const_lv64_1);
    } else {
        kernel_address1 =  (sc_lv<4>) ("XXXX");
    }
}

void conv::thread_kernel_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void conv::thread_kernel_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        kernel_ce1 = ap_const_logic_1;
    } else {
        kernel_ce1 = ap_const_logic_0;
    }
}

void conv::thread_out_r_address0() {
    out_r_address0 =  (sc_lv<10>) (tmp_29_cast_fu_580_p1.read());
}

void conv::thread_out_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_r_ce0 = ap_const_logic_1;
    } else {
        out_r_ce0 = ap_const_logic_0;
    }
}

void conv::thread_out_r_d0() {
    out_r_d0 = tmp_17_reg_764.read();
}

void conv::thread_out_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        out_r_we0 = ap_const_logic_1;
    } else {
        out_r_we0 = ap_const_logic_0;
    }
}

void conv::thread_p_shl1_cast_fu_416_p1() {
    p_shl1_cast_fu_416_p1 = esl_zext<11,7>(tmp_20_fu_408_p3.read());
}

void conv::thread_p_shl2_cast_fu_368_p1() {
    p_shl2_cast_fu_368_p1 = esl_zext<11,10>(tmp_6_fu_360_p3.read());
}

void conv::thread_p_shl3_cast_fu_380_p1() {
    p_shl3_cast_fu_380_p1 = esl_zext<11,7>(tmp_8_fu_372_p3.read());
}

void conv::thread_p_shl4_cast_fu_332_p1() {
    p_shl4_cast_fu_332_p1 = esl_zext<11,10>(tmp_2_fu_324_p3.read());
}

void conv::thread_p_shl5_cast_fu_344_p1() {
    p_shl5_cast_fu_344_p1 = esl_zext<11,7>(tmp_4_fu_336_p3.read());
}

void conv::thread_p_shl_cast_fu_404_p1() {
    p_shl_cast_fu_404_p1 = esl_zext<11,10>(tmp_19_fu_396_p3.read());
}

void conv::thread_tmp1_fu_552_p2() {
    tmp1_fu_552_p2 = (!reg_304.read().is_01() || !tmp3_fu_546_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_304.read()) + sc_biguint<32>(tmp3_fu_546_p2.read()));
}

void conv::thread_tmp3_fu_546_p2() {
    tmp3_fu_546_p2 = (!reg_294.read().is_01() || !reg_290.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_294.read()) + sc_biguint<32>(reg_290.read()));
}

void conv::thread_tmp4_fu_569_p2() {
    tmp4_fu_569_p2 = (!reg_304.read().is_01() || !tmp6_fu_563_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_304.read()) + sc_biguint<32>(tmp6_fu_563_p2.read()));
}

void conv::thread_tmp6_fu_563_p2() {
    tmp6_fu_563_p2 = (!reg_290.read().is_01() || !tmp7_fu_558_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_290.read()) + sc_biguint<32>(tmp7_fu_558_p2.read()));
}

void conv::thread_tmp7_fu_558_p2() {
    tmp7_fu_558_p2 = (!reg_294.read().is_01() || !tmp_15_reg_759.read().is_01())? sc_lv<32>(): (sc_biguint<32>(reg_294.read()) + sc_biguint<32>(tmp_15_reg_759.read()));
}

void conv::thread_tmp_17_fu_575_p2() {
    tmp_17_fu_575_p2 = (!tmp1_reg_754.read().is_01() || !tmp4_fu_569_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp1_reg_754.read()) + sc_biguint<32>(tmp4_fu_569_p2.read()));
}

void conv::thread_tmp_18_fu_384_p2() {
    tmp_18_fu_384_p2 = (!p_shl2_cast_fu_368_p1.read().is_01() || !p_shl3_cast_fu_380_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl2_cast_fu_368_p1.read()) - sc_biguint<11>(p_shl3_cast_fu_380_p1.read()));
}

void conv::thread_tmp_19_fu_396_p3() {
    tmp_19_fu_396_p3 = esl_concat<5,5>(i_1_fu_390_p2.read(), ap_const_lv5_0);
}

void conv::thread_tmp_1_fu_354_p0() {
    tmp_1_fu_354_p0 =  (sc_lv<5>) (tmp_1_fu_354_p00.read());
}

void conv::thread_tmp_1_fu_354_p00() {
    tmp_1_fu_354_p00 = esl_zext<10,5>(tmp_fu_314_p2.read());
}

void conv::thread_tmp_1_fu_354_p2() {
    tmp_1_fu_354_p2 = (!tmp_1_fu_354_p0.read().is_01() || !ap_const_lv10_1A.is_01())? sc_lv<10>(): sc_biguint<5>(tmp_1_fu_354_p0.read()) * sc_biguint<10>(ap_const_lv10_1A);
}

void conv::thread_tmp_20_fu_408_p3() {
    tmp_20_fu_408_p3 = esl_concat<5,2>(i_1_fu_390_p2.read(), ap_const_lv2_0);
}

void conv::thread_tmp_21_fu_420_p2() {
    tmp_21_fu_420_p2 = (!p_shl_cast_fu_404_p1.read().is_01() || !p_shl1_cast_fu_416_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_404_p1.read()) - sc_biguint<11>(p_shl1_cast_fu_416_p1.read()));
}

void conv::thread_tmp_22_fu_446_p2() {
    tmp_22_fu_446_p2 = (!tmp_s_reg_632.read().is_01() || !tmp_6_cast_fu_442_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_s_reg_632.read()) + sc_biguint<11>(tmp_6_cast_fu_442_p1.read()));
}

void conv::thread_tmp_23_fu_475_p2() {
    tmp_23_fu_475_p2 = (!tmp_18_reg_644.read().is_01() || !tmp_6_cast_reg_666.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_18_reg_644.read()) + sc_biguint<11>(tmp_6_cast_reg_666.read()));
}

void conv::thread_tmp_24_fu_504_p2() {
    tmp_24_fu_504_p2 = (!tmp_21_reg_656.read().is_01() || !tmp_6_cast_reg_666.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_21_reg_656.read()) + sc_biguint<11>(tmp_6_cast_reg_666.read()));
}

void conv::thread_tmp_25_fu_456_p2() {
    tmp_25_fu_456_p2 = (!tmp_1_reg_639.read().is_01() || !tmp_6_cast6_fu_438_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_1_reg_639.read()) + sc_biguint<10>(tmp_6_cast6_fu_438_p1.read()));
}

void conv::thread_tmp_26_cast_fu_451_p1() {
    tmp_26_cast_fu_451_p1 = esl_sext<64,11>(tmp_22_fu_446_p2.read());
}

void conv::thread_tmp_26_fu_465_p2() {
    tmp_26_fu_465_p2 = (!tmp_s_reg_632.read().is_01() || !tmp_8_cast_fu_461_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_s_reg_632.read()) + sc_biguint<11>(tmp_8_cast_fu_461_p1.read()));
}

void conv::thread_tmp_27_cast_fu_479_p1() {
    tmp_27_cast_fu_479_p1 = esl_sext<64,11>(tmp_23_fu_475_p2.read());
}

void conv::thread_tmp_27_fu_508_p2() {
    tmp_27_fu_508_p2 = (!tmp_18_reg_644.read().is_01() || !tmp_8_cast_reg_682.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_18_reg_644.read()) + sc_biguint<11>(tmp_8_cast_reg_682.read()));
}

void conv::thread_tmp_28_cast_fu_534_p1() {
    tmp_28_cast_fu_534_p1 = esl_sext<64,11>(tmp_24_reg_714.read());
}

void conv::thread_tmp_28_fu_517_p2() {
    tmp_28_fu_517_p2 = (!tmp_21_reg_656.read().is_01() || !tmp_8_cast_reg_682.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_21_reg_656.read()) + sc_biguint<11>(tmp_8_cast_reg_682.read()));
}

void conv::thread_tmp_29_cast_fu_580_p1() {
    tmp_29_cast_fu_580_p1 = esl_zext<64,10>(tmp_25_reg_677.read());
}

void conv::thread_tmp_29_fu_494_p2() {
    tmp_29_fu_494_p2 = (!tmp_s_reg_632.read().is_01() || !tmp_cast_fu_490_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_s_reg_632.read()) + sc_biguint<11>(tmp_cast_fu_490_p1.read()));
}

void conv::thread_tmp_2_fu_324_p3() {
    tmp_2_fu_324_p3 = esl_concat<5,5>(tmp_fu_314_p2.read(), ap_const_lv5_0);
}

void conv::thread_tmp_30_cast_fu_470_p1() {
    tmp_30_cast_fu_470_p1 = esl_sext<64,11>(tmp_26_fu_465_p2.read());
}

void conv::thread_tmp_30_fu_521_p2() {
    tmp_30_fu_521_p2 = (!tmp_18_reg_644.read().is_01() || !tmp_cast_reg_703.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_18_reg_644.read()) + sc_biguint<11>(tmp_cast_reg_703.read()));
}

void conv::thread_tmp_31_cast_fu_512_p1() {
    tmp_31_cast_fu_512_p1 = esl_sext<64,11>(tmp_27_fu_508_p2.read());
}

void conv::thread_tmp_31_fu_530_p2() {
    tmp_31_fu_530_p2 = (!tmp_21_reg_656.read().is_01() || !tmp_cast_reg_703.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_21_reg_656.read()) + sc_biguint<11>(tmp_cast_reg_703.read()));
}

void conv::thread_tmp_32_cast_fu_538_p1() {
    tmp_32_cast_fu_538_p1 = esl_sext<64,11>(tmp_28_reg_724.read());
}

void conv::thread_tmp_33_cast_fu_499_p1() {
    tmp_33_cast_fu_499_p1 = esl_sext<64,11>(tmp_29_fu_494_p2.read());
}

void conv::thread_tmp_34_cast_fu_525_p1() {
    tmp_34_cast_fu_525_p1 = esl_sext<64,11>(tmp_30_fu_521_p2.read());
}

void conv::thread_tmp_35_cast_fu_542_p1() {
    tmp_35_cast_fu_542_p1 = esl_sext<64,11>(tmp_31_reg_734.read());
}

void conv::thread_tmp_4_fu_336_p3() {
    tmp_4_fu_336_p3 = esl_concat<5,2>(tmp_fu_314_p2.read(), ap_const_lv2_0);
}

void conv::thread_tmp_5_fu_432_p2() {
    tmp_5_fu_432_p2 = (!j_reg_246.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_246.read()) + sc_bigint<5>(ap_const_lv5_1F));
}

void conv::thread_tmp_6_cast6_fu_438_p1() {
    tmp_6_cast6_fu_438_p1 = esl_zext<10,5>(tmp_5_fu_432_p2.read());
}

void conv::thread_tmp_6_cast_fu_442_p1() {
    tmp_6_cast_fu_442_p1 = esl_zext<11,5>(tmp_5_fu_432_p2.read());
}

void conv::thread_tmp_6_fu_360_p3() {
    tmp_6_fu_360_p3 = esl_concat<5,5>(i_reg_235.read(), ap_const_lv5_0);
}

void conv::thread_tmp_8_cast_fu_461_p1() {
    tmp_8_cast_fu_461_p1 = esl_zext<11,5>(j_reg_246.read());
}

void conv::thread_tmp_8_fu_372_p3() {
    tmp_8_fu_372_p3 = esl_concat<5,2>(i_reg_235.read(), ap_const_lv2_0);
}

void conv::thread_tmp_cast_fu_490_p1() {
    tmp_cast_fu_490_p1 = esl_zext<11,5>(j_1_fu_484_p2.read());
}

void conv::thread_tmp_fu_314_p2() {
    tmp_fu_314_p2 = (!i_reg_235.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_235.read()) + sc_bigint<5>(ap_const_lv5_1F));
}

void conv::thread_tmp_s_fu_348_p2() {
    tmp_s_fu_348_p2 = (!p_shl4_cast_fu_332_p1.read().is_01() || !p_shl5_cast_fu_344_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl4_cast_fu_332_p1.read()) - sc_biguint<11>(p_shl5_cast_fu_344_p1.read()));
}

void conv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_308_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_426_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

void conv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address1\" :  \"" << kernel_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce1\" :  \"" << kernel_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q1\" :  \"" << kernel_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

