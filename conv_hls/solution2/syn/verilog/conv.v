// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.872625,HLS_SYN_LAT=12186,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=28,HLS_SYN_FF=2475,HLS_SYN_LUT=2955,HLS_VERSION=2018_3}" *)

module conv (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_pp0_stage0 = 20'd2;
parameter    ap_ST_fsm_pp0_stage1 = 20'd4;
parameter    ap_ST_fsm_pp0_stage2 = 20'd8;
parameter    ap_ST_fsm_pp0_stage3 = 20'd16;
parameter    ap_ST_fsm_pp0_stage4 = 20'd32;
parameter    ap_ST_fsm_pp0_stage5 = 20'd64;
parameter    ap_ST_fsm_pp0_stage6 = 20'd128;
parameter    ap_ST_fsm_pp0_stage7 = 20'd256;
parameter    ap_ST_fsm_pp0_stage8 = 20'd512;
parameter    ap_ST_fsm_pp0_stage9 = 20'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 20'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 20'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 20'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 20'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 20'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 20'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 20'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 20'd262144;
parameter    ap_ST_fsm_state37 = 20'd524288;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] A;
wire   [31:0] kernel;
wire   [31:0] out_r;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage3;
reg   [0:0] exitcond_flatten_reg_1084;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] exitcond_flatten_reg_1084_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
wire   [31:0] gmem_AWADDR;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [9:0] indvar_flatten_reg_372;
reg   [4:0] i_reg_383;
reg   [4:0] j_reg_394;
wire   [30:0] tmp_3_cast_fu_415_p1;
reg   [30:0] tmp_3_cast_reg_1012;
reg   [31:0] gmem_addr_reg_1017;
wire   [63:0] tmp_3_fu_453_p1;
reg   [63:0] tmp_3_reg_1023;
reg   [31:0] gmem_addr_1_reg_1036;
reg   [31:0] gmem_addr_2_reg_1042;
reg   [31:0] gmem_addr_3_reg_1048;
reg   [31:0] gmem_addr_4_reg_1054;
reg   [31:0] gmem_addr_5_reg_1060;
reg   [31:0] gmem_addr_6_reg_1066;
reg   [31:0] gmem_addr_7_reg_1072;
reg   [31:0] gmem_addr_8_reg_1078;
wire   [0:0] exitcond_flatten_fu_597_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state20_pp0_stage0_iter1;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_block_state20_io;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] indvar_flatten_next_fu_603_p2;
reg   [9:0] indvar_flatten_next_reg_1088;
wire   [4:0] j_mid2_fu_615_p3;
reg   [4:0] j_mid2_reg_1093;
wire   [4:0] tmp_1_mid2_fu_623_p3;
reg   [4:0] tmp_1_mid2_reg_1100;
reg   [4:0] tmp_1_mid2_reg_1100_pp0_iter1_reg;
wire   [4:0] tmp_2_mid2_fu_631_p3;
reg   [4:0] tmp_2_mid2_reg_1107;
wire   [4:0] tmp_4_mid2_fu_645_p3;
reg   [4:0] tmp_4_mid2_reg_1114;
wire   [63:0] tmp_20_fu_675_p2;
reg   [63:0] tmp_20_reg_1120;
wire    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state21_pp0_stage1_iter1;
reg    ap_block_state21_io;
reg    ap_block_pp0_stage1_11001;
wire   [4:0] tmp_5_fu_681_p2;
reg   [4:0] tmp_5_reg_1126;
reg   [4:0] tmp_5_reg_1126_pp0_iter1_reg;
wire   [63:0] tmp_6_fu_686_p1;
reg   [63:0] tmp_6_reg_1131;
reg   [31:0] gmem_addr_9_reg_1137;
reg   [31:0] gmem_addr_10_reg_1143;
wire    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_state5_io;
reg    ap_block_state23_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
reg   [31:0] gmem_addr_11_reg_1149;
reg   [31:0] gmem_addr_13_reg_1155;
reg   [31:0] gmem_addr_14_reg_1161;
reg   [31:0] gmem_addr_15_reg_1167;
wire   [4:0] j_1_fu_848_p2;
reg   [4:0] j_1_reg_1173;
reg   [31:0] gmem_addr_16_reg_1178;
reg   [31:0] gmem_addr_17_reg_1184;
reg   [31:0] gmem_addr_18_reg_1190;
reg  signed [31:0] gmem_addr_9_read_reg_1196;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_state11_io;
wire    ap_block_state29_pp0_stage9_iter1;
reg    ap_block_pp0_stage9_11001;
reg  signed [31:0] gmem_addr_read_reg_1201;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_state12_io;
wire    ap_block_state30_pp0_stage10_iter1;
reg    ap_sig_ioackin_gmem_AWREADY;
reg    ap_block_state30_io;
reg    ap_block_pp0_stage10_11001;
wire   [31:0] tmp_7_fu_907_p2;
reg   [31:0] tmp_7_reg_1206;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_state13_io;
wire    ap_block_state31_pp0_stage11_iter1;
reg    ap_sig_ioackin_gmem_WREADY;
reg    ap_block_state31_io;
reg    ap_block_pp0_stage11_11001;
reg  signed [31:0] gmem_addr_13_read_reg_1211;
reg  signed [31:0] gmem_addr_1_read_reg_1216;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_state14_io;
wire    ap_block_state32_pp0_stage12_iter1;
reg    ap_block_pp0_stage12_11001;
wire   [31:0] tmp_9_fu_911_p2;
reg   [31:0] tmp_9_reg_1221;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_state15_io;
wire    ap_block_state33_pp0_stage13_iter1;
reg    ap_block_pp0_stage13_11001;
reg  signed [31:0] gmem_addr_16_read_reg_1226;
reg  signed [31:0] gmem_addr_2_read_reg_1231;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_state16_io;
wire    ap_block_state34_pp0_stage14_iter1;
reg    ap_block_pp0_stage14_11001;
wire   [31:0] tmp2_fu_915_p2;
reg   [31:0] tmp2_reg_1236;
wire   [31:0] tmp_11_fu_919_p2;
reg   [31:0] tmp_11_reg_1241;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_state17_io;
wire    ap_block_state35_pp0_stage15_iter1;
reg    ap_block_pp0_stage15_11001;
reg  signed [31:0] gmem_addr_10_read_reg_1246;
reg  signed [31:0] gmem_addr_3_read_reg_1251;
reg    ap_block_state18_pp0_stage16_iter0;
reg    ap_block_state18_io;
reg    ap_block_state36_pp0_stage16_iter1;
reg    ap_block_pp0_stage16_11001;
wire   [31:0] tmp_12_fu_923_p2;
reg   [31:0] tmp_12_reg_1256;
reg    ap_block_state19_pp0_stage17_iter0;
reg    ap_block_state19_io;
reg    ap_block_pp0_stage17_11001;
reg  signed [31:0] gmem_addr_14_read_reg_1261;
reg  signed [31:0] gmem_addr_4_read_reg_1266;
wire   [31:0] tmp1_fu_931_p2;
reg   [31:0] tmp1_reg_1271;
wire   [31:0] tmp_13_fu_936_p2;
reg   [31:0] tmp_13_reg_1276;
reg  signed [31:0] gmem_addr_17_read_reg_1281;
reg  signed [31:0] gmem_addr_5_read_reg_1286;
wire    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_state4_io;
reg    ap_block_state22_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_14_fu_940_p2;
reg   [31:0] tmp_14_reg_1291;
reg  signed [31:0] gmem_addr_11_read_reg_1296;
reg  signed [31:0] gmem_addr_6_read_reg_1301;
wire    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_state6_io;
reg    ap_block_state24_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire   [31:0] tmp5_fu_944_p2;
reg   [31:0] tmp5_reg_1306;
wire   [31:0] tmp_15_fu_948_p2;
reg   [31:0] tmp_15_reg_1311;
wire    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_state7_io;
reg    ap_block_state25_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
reg  signed [31:0] gmem_addr_15_read_reg_1316;
reg  signed [31:0] gmem_addr_7_read_reg_1321;
wire    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_state8_io;
reg    ap_block_state26_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
wire   [31:0] tmp_16_fu_952_p2;
reg   [31:0] tmp_16_reg_1326;
wire    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_state9_io;
reg    ap_block_state27_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
reg  signed [31:0] gmem_addr_18_read_reg_1331;
reg  signed [31:0] gmem_addr_8_read_reg_1336;
wire    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_state10_io;
reg    ap_block_state28_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_11001;
wire   [30:0] out6_sum_fu_965_p2;
reg   [30:0] out6_sum_reg_1341;
wire   [31:0] tmp_17_fu_970_p2;
reg   [31:0] tmp_17_reg_1346;
wire   [31:0] tmp_18_fu_998_p2;
reg   [31:0] tmp_18_reg_1357;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage16_subdone;
reg   [9:0] ap_phi_mux_indvar_flatten_phi_fu_376_p4;
reg   [4:0] ap_phi_mux_i_phi_fu_387_p4;
reg   [4:0] ap_phi_mux_j_phi_fu_398_p4;
wire   [63:0] tmp_2_fu_429_p1;
wire   [63:0] kernel4_sum_cast_fu_463_p1;
wire   [63:0] kernel4_sum1_cast_fu_479_p1;
wire   [63:0] kernel4_sum2_cast_fu_495_p1;
wire   [63:0] kernel4_sum3_cast_fu_511_p1;
wire   [63:0] kernel4_sum4_cast_fu_527_p1;
wire   [63:0] kernel4_sum5_cast_fu_543_p1;
wire   [63:0] kernel4_sum6_cast_fu_559_p1;
wire   [63:0] kernel4_sum7_cast_fu_575_p1;
wire   [63:0] A2_sum_fu_696_p2;
wire   [63:0] A2_sum1_fu_768_p2;
wire   [63:0] A2_sum2_fu_784_p2;
wire   [63:0] A2_sum3_fu_803_p2;
wire   [63:0] A2_sum4_fu_820_p2;
wire   [63:0] A2_sum5_fu_837_p2;
wire   [63:0] A2_sum6_fu_862_p2;
wire   [63:0] A2_sum7_fu_879_p2;
wire   [63:0] A2_sum8_fu_896_p2;
wire   [63:0] out6_sum_cast_fu_974_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_pp0_stage10_01001;
reg    ap_block_pp0_stage11_01001;
reg    ap_block_pp0_stage12_01001;
reg    ap_block_pp0_stage13_01001;
reg    ap_block_pp0_stage14_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage16_01001;
reg    ap_block_pp0_stage17_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_WREADY;
wire   [29:0] tmp_1_fu_405_p4;
wire   [29:0] kernel3_fu_419_p4;
wire   [29:0] A1_fu_443_p4;
wire   [30:0] tmp_19_cast_fu_433_p1;
wire   [30:0] kernel4_sum_fu_457_p2;
wire   [30:0] kernel4_sum1_fu_473_p2;
wire   [30:0] kernel4_sum2_fu_489_p2;
wire   [30:0] kernel4_sum3_fu_505_p2;
wire   [30:0] kernel4_sum4_fu_521_p2;
wire   [30:0] kernel4_sum5_fu_537_p2;
wire   [30:0] kernel4_sum6_fu_553_p2;
wire   [30:0] kernel4_sum7_fu_569_p2;
wire   [0:0] exitcond_fu_609_p2;
wire   [4:0] tmp_fu_585_p2;
wire   [4:0] i_1_fu_591_p2;
wire   [4:0] i_1_mid1_fu_639_p2;
wire   [9:0] tmp_4_fu_653_p3;
wire   [6:0] tmp_19_fu_664_p3;
wire   [63:0] p_shl1_fu_660_p1;
wire   [63:0] p_shl2_fu_671_p1;
wire   [63:0] tmp_28_fu_690_p2;
wire   [9:0] tmp_22_fu_707_p3;
wire   [6:0] tmp_23_fu_718_p3;
wire   [63:0] p_shl8_fu_714_p1;
wire   [63:0] p_shl9_fu_725_p1;
wire   [9:0] tmp_25_fu_735_p3;
wire   [6:0] tmp_26_fu_746_p3;
wire   [63:0] p_shl_fu_742_p1;
wire   [63:0] p_shl7_fu_753_p1;
wire   [63:0] tmp_24_fu_729_p2;
wire   [63:0] tmp_29_fu_763_p2;
wire   [63:0] tmp_27_fu_757_p2;
wire   [63:0] tmp_30_fu_779_p2;
wire   [63:0] tmp_8_fu_795_p1;
wire   [63:0] tmp_32_fu_798_p2;
wire   [63:0] tmp_33_fu_814_p2;
wire   [63:0] tmp_34_fu_831_p2;
wire   [63:0] tmp_s_fu_853_p1;
wire   [63:0] tmp_35_fu_857_p2;
wire   [63:0] tmp_36_fu_873_p2;
wire   [63:0] tmp_37_fu_890_p2;
wire   [31:0] tmp3_fu_927_p2;
wire   [9:0] grp_fu_1003_p3;
wire   [30:0] tmp_34_cast_fu_962_p1;
wire   [31:0] tmp7_fu_984_p2;
wire   [31:0] tmp6_fu_988_p2;
wire   [31:0] tmp4_fu_993_p2;
wire   [4:0] grp_fu_1003_p0;
wire   [5:0] grp_fu_1003_p1;
wire   [4:0] grp_fu_1003_p2;
wire    ap_CS_fsm_state37;
reg   [19:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1003_p00;
wire   [9:0] grp_fu_1003_p20;
reg    ap_condition_1655;
reg    ap_condition_1659;
reg    ap_condition_916;
reg    ap_condition_930;
reg    ap_condition_940;
reg    ap_condition_952;
reg    ap_condition_964;
reg    ap_condition_976;
reg    ap_condition_988;
reg    ap_condition_1003;
reg    ap_condition_1016;
reg    ap_condition_1029;
reg    ap_condition_1042;
reg    ap_condition_1055;
reg    ap_condition_1068;
reg    ap_condition_1081;
reg    ap_condition_1095;
reg    ap_condition_1108;
reg    ap_condition_1120;
reg    ap_condition_1133;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

conv_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
conv_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .A(A),
    .kernel(kernel),
    .out_r(out_r)
);

conv_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
conv_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(tmp_18_reg_1357),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

conv_mac_muladd_5bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
conv_mac_muladd_5bkb_U1(
    .din0(grp_fu_1003_p0),
    .din1(grp_fu_1003_p1),
    .din2(grp_fu_1003_p2),
    .dout(grp_fu_1003_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage17_subdone) & (1'b1 == ap_CS_fsm_pp0_stage17)) | ((1'b0 == ap_block_pp0_stage16_subdone) & (1'b1 == ap_CS_fsm_pp0_stage16)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084 == 1'd0)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage17_01001)) | ((1'b0 == ap_block_pp0_stage4_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage15_01001)) | ((1'b0 == ap_block_pp0_stage2_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage13_01001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage11_01001)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage16_01001)) | ((1'b0 == ap_block_pp0_stage9_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage14_01001)) | ((1'b0 == ap_block_pp0_stage7_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage12_01001)) | ((1'b0 == ap_block_pp0_stage5_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage10_01001)) | ((1'b0 == ap_block_pp0_stage3_01001) & (gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084 == 1'd0)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_1655)) begin
            if ((1'b0 == ap_block_pp0_stage10_11001)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b0;
            end else if (((gmem_AWREADY == 1'b1) & (1'b0 == ap_block_pp0_stage10_01001))) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_1659)) begin
            if ((1'b0 == ap_block_pp0_stage11_11001)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b0;
            end else if (((gmem_WREADY == 1'b1) & (1'b0 == ap_block_pp0_stage11_01001))) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        i_reg_383 <= tmp_2_mid2_reg_1107;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_383 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        indvar_flatten_reg_372 <= indvar_flatten_next_reg_1088;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_372 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        j_reg_394 <= j_1_reg_1173;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_394 <= 5'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1084 <= exitcond_flatten_fu_597_p2;
        exitcond_flatten_reg_1084_pp0_iter1_reg <= exitcond_flatten_reg_1084;
        tmp_1_mid2_reg_1100_pp0_iter1_reg <= tmp_1_mid2_reg_1100;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_10_read_reg_1246 <= gmem_RDATA;
        tmp_11_reg_1241 <= tmp_11_fu_919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_10_reg_1143 <= A2_sum1_fu_768_p2;
        gmem_addr_11_reg_1149 <= A2_sum2_fu_784_p2;
        gmem_addr_13_reg_1155 <= A2_sum3_fu_803_p2;
        gmem_addr_14_reg_1161 <= A2_sum4_fu_820_p2;
        gmem_addr_15_reg_1167 <= A2_sum5_fu_837_p2;
        gmem_addr_16_reg_1178 <= A2_sum6_fu_862_p2;
        gmem_addr_17_reg_1184 <= A2_sum7_fu_879_p2;
        gmem_addr_18_reg_1190 <= A2_sum8_fu_896_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_11_read_reg_1296 <= gmem_RDATA;
        tmp_14_reg_1291 <= tmp_14_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_13_read_reg_1211 <= gmem_RDATA;
        tmp_7_reg_1206 <= tmp_7_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_14_read_reg_1261 <= gmem_RDATA;
        tmp_12_reg_1256 <= tmp_12_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_15_read_reg_1316 <= gmem_RDATA;
        tmp_15_reg_1311 <= tmp_15_fu_948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_16_read_reg_1226 <= gmem_RDATA;
        tmp_9_reg_1221 <= tmp_9_fu_911_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_17_read_reg_1281 <= gmem_RDATA;
        tmp_13_reg_1276 <= tmp_13_fu_936_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_18_read_reg_1331 <= gmem_RDATA;
        tmp_16_reg_1326 <= tmp_16_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_1_read_reg_1216 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        gmem_addr_1_reg_1036[30 : 0] <= kernel4_sum_cast_fu_463_p1[30 : 0];
        gmem_addr_2_reg_1042[30 : 0] <= kernel4_sum1_cast_fu_479_p1[30 : 0];
        gmem_addr_3_reg_1048[30 : 0] <= kernel4_sum2_cast_fu_495_p1[30 : 0];
        gmem_addr_4_reg_1054[30 : 0] <= kernel4_sum3_cast_fu_511_p1[30 : 0];
        gmem_addr_5_reg_1060[30 : 0] <= kernel4_sum4_cast_fu_527_p1[30 : 0];
        gmem_addr_6_reg_1066[30 : 0] <= kernel4_sum5_cast_fu_543_p1[30 : 0];
        gmem_addr_7_reg_1072[30 : 0] <= kernel4_sum6_cast_fu_559_p1[30 : 0];
        gmem_addr_8_reg_1078[30 : 0] <= kernel4_sum7_cast_fu_575_p1[30 : 0];
        gmem_addr_reg_1017[29 : 0] <= tmp_2_fu_429_p1[29 : 0];
        tmp_3_cast_reg_1012[29 : 0] <= tmp_3_cast_fu_415_p1[29 : 0];
        tmp_3_reg_1023[29 : 0] <= tmp_3_fu_453_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_2_read_reg_1231 <= gmem_RDATA;
        tmp2_reg_1236 <= tmp2_fu_915_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_3_read_reg_1251 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_4_read_reg_1266 <= gmem_RDATA;
        tmp1_reg_1271 <= tmp1_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_5_read_reg_1286 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_6_read_reg_1301 <= gmem_RDATA;
        tmp5_reg_1306 <= tmp5_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_7_read_reg_1321 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_8_read_reg_1336 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_9_read_reg_1196 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_9_reg_1137 <= A2_sum_fu_696_p2;
        tmp_20_reg_1120[63 : 2] <= tmp_20_fu_675_p2[63 : 2];
        tmp_5_reg_1126 <= tmp_5_fu_681_p2;
        tmp_6_reg_1131[4 : 0] <= tmp_6_fu_686_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        gmem_addr_read_reg_1201 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1088 <= indvar_flatten_next_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        j_1_reg_1173 <= j_1_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_fu_597_p2 == 1'd0))) begin
        j_mid2_reg_1093 <= j_mid2_fu_615_p3;
        tmp_1_mid2_reg_1100 <= tmp_1_mid2_fu_623_p3;
        tmp_4_mid2_reg_1114 <= tmp_4_mid2_fu_645_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        out6_sum_reg_1341 <= out6_sum_fu_965_p2;
        tmp_17_reg_1346 <= tmp_17_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        tmp_18_reg_1357 <= tmp_18_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_fu_597_p2 == 1'd0))) begin
        tmp_2_mid2_reg_1107 <= tmp_2_mid2_fu_631_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_5_reg_1126_pp0_iter1_reg <= tmp_5_reg_1126;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_597_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_387_p4 = tmp_2_mid2_reg_1107;
    end else begin
        ap_phi_mux_i_phi_fu_387_p4 = i_reg_383;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_376_p4 = indvar_flatten_next_reg_1088;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_376_p4 = indvar_flatten_reg_372;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_398_p4 = j_1_reg_1173;
    end else begin
        ap_phi_mux_j_phi_fu_398_p4 = j_reg_394;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_AWREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_WREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_1133)) begin
            gmem_ARADDR = gmem_addr_8_reg_1078;
        end else if ((1'b1 == ap_condition_1120)) begin
            gmem_ARADDR = gmem_addr_18_reg_1190;
        end else if ((1'b1 == ap_condition_1108)) begin
            gmem_ARADDR = gmem_addr_7_reg_1072;
        end else if ((1'b1 == ap_condition_1095)) begin
            gmem_ARADDR = gmem_addr_15_reg_1167;
        end else if ((1'b1 == ap_condition_1081)) begin
            gmem_ARADDR = gmem_addr_6_reg_1066;
        end else if ((1'b1 == ap_condition_1068)) begin
            gmem_ARADDR = gmem_addr_11_reg_1149;
        end else if ((1'b1 == ap_condition_1055)) begin
            gmem_ARADDR = gmem_addr_5_reg_1060;
        end else if ((1'b1 == ap_condition_1042)) begin
            gmem_ARADDR = gmem_addr_17_reg_1184;
        end else if ((1'b1 == ap_condition_1029)) begin
            gmem_ARADDR = gmem_addr_4_reg_1054;
        end else if ((1'b1 == ap_condition_1016)) begin
            gmem_ARADDR = gmem_addr_14_reg_1161;
        end else if ((1'b1 == ap_condition_1003)) begin
            gmem_ARADDR = gmem_addr_3_reg_1048;
        end else if ((1'b1 == ap_condition_988)) begin
            gmem_ARADDR = gmem_addr_10_reg_1143;
        end else if ((1'b1 == ap_condition_976)) begin
            gmem_ARADDR = gmem_addr_2_reg_1042;
        end else if ((1'b1 == ap_condition_964)) begin
            gmem_ARADDR = gmem_addr_16_reg_1178;
        end else if ((1'b1 == ap_condition_952)) begin
            gmem_ARADDR = gmem_addr_1_reg_1036;
        end else if ((1'b1 == ap_condition_940)) begin
            gmem_ARADDR = gmem_addr_13_reg_1155;
        end else if ((1'b1 == ap_condition_930)) begin
            gmem_ARADDR = gmem_addr_reg_1017;
        end else if ((1'b1 == ap_condition_916)) begin
            gmem_ARADDR = gmem_addr_9_reg_1137;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage17_01001)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage15_01001)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage13_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage11_01001)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage16_01001)) | ((1'b0 == ap_block_pp0_stage9_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage14_01001)) | ((1'b0 == ap_block_pp0_stage7_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage12_01001)) | ((1'b0 == ap_block_pp0_stage5_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage10_01001)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084 == 1'd0)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage10_01001))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17_11001) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage16_11001) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage11_01001))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage3)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage17) & (1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage16) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage14) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12) & (exitcond_flatten_reg_1084 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10) & (exitcond_flatten_reg_1084 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_597_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten_fu_597_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((~((1'b0 == ap_block_pp0_stage16_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage16_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else if (((1'b0 == ap_block_pp0_stage16_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A1_fu_443_p4 = {{A[31:2]}};

assign A2_sum1_fu_768_p2 = (tmp_29_fu_763_p2 + tmp_3_reg_1023);

assign A2_sum2_fu_784_p2 = (tmp_30_fu_779_p2 + tmp_3_reg_1023);

assign A2_sum3_fu_803_p2 = (tmp_32_fu_798_p2 + tmp_3_reg_1023);

assign A2_sum4_fu_820_p2 = (tmp_33_fu_814_p2 + tmp_3_reg_1023);

assign A2_sum5_fu_837_p2 = (tmp_34_fu_831_p2 + tmp_3_reg_1023);

assign A2_sum6_fu_862_p2 = (tmp_35_fu_857_p2 + tmp_3_reg_1023);

assign A2_sum7_fu_879_p2 = (tmp_36_fu_873_p2 + tmp_3_reg_1023);

assign A2_sum8_fu_896_p2 = (tmp_37_fu_890_p2 + tmp_3_reg_1023);

assign A2_sum_fu_696_p2 = (tmp_28_fu_690_p2 + tmp_3_reg_1023);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd19];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state20_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = (((1'b1 == ap_block_state30_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0)))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = (((1'b1 == ap_block_state31_io) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0)))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage16_11001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0)))));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state19_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state21_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state4_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state5_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state6_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state7_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state8_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state9_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0))));
end

always @ (*) begin
    ap_block_state10_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state12_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state13_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state14_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state15_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state16_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state17_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state18_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state18_pp0_stage16_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state19_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state19_pp0_stage17_iter0 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state20_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state20_pp0_stage0_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_block_state21_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state21_pp0_stage1_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state22_pp0_stage2_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state23_pp0_stage3_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_pp0_stage4_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state25_pp0_stage5_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state26_pp0_stage6_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state27_pp0_stage7_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state28_pp0_stage8_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

assign ap_block_state29_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

assign ap_block_state30_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

assign ap_block_state31_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_pp0_stage16_iter1 = ((gmem_BVALID == 1'b0) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1003 = ((1'b0 == ap_block_pp0_stage9_01001) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_1016 = ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage10_01001));
end

always @ (*) begin
    ap_condition_1029 = ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage11_01001));
end

always @ (*) begin
    ap_condition_1042 = ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage12_01001));
end

always @ (*) begin
    ap_condition_1055 = ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage13_01001));
end

always @ (*) begin
    ap_condition_1068 = ((1'b1 == ap_CS_fsm_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage14_01001));
end

always @ (*) begin
    ap_condition_1081 = ((1'b1 == ap_CS_fsm_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage15_01001));
end

always @ (*) begin
    ap_condition_1095 = ((1'b1 == ap_CS_fsm_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage16_01001));
end

always @ (*) begin
    ap_condition_1108 = ((1'b1 == ap_CS_fsm_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0) & (1'b0 == ap_block_pp0_stage17_01001));
end

always @ (*) begin
    ap_condition_1120 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_1133 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_01001) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1655 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1659 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (exitcond_flatten_reg_1084_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_916 = ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_930 = ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_940 = ((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_952 = ((1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_964 = ((1'b0 == ap_block_pp0_stage6_01001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_976 = ((1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

always @ (*) begin
    ap_condition_988 = ((1'b0 == ap_block_pp0_stage8_01001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond_flatten_reg_1084 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond_flatten_fu_597_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_376_p4 == 10'd676) ? 1'b1 : 1'b0);

assign exitcond_fu_609_p2 = ((ap_phi_mux_j_phi_fu_398_p4 == 5'd27) ? 1'b1 : 1'b0);

assign gmem_AWADDR = out6_sum_cast_fu_974_p1;

assign grp_fu_1003_p0 = grp_fu_1003_p00;

assign grp_fu_1003_p00 = tmp_1_mid2_reg_1100_pp0_iter1_reg;

assign grp_fu_1003_p1 = 10'd26;

assign grp_fu_1003_p2 = grp_fu_1003_p20;

assign grp_fu_1003_p20 = tmp_5_reg_1126_pp0_iter1_reg;

assign i_1_fu_591_p2 = (ap_phi_mux_i_phi_fu_387_p4 + 5'd1);

assign i_1_mid1_fu_639_p2 = (ap_phi_mux_i_phi_fu_387_p4 + 5'd2);

assign indvar_flatten_next_fu_603_p2 = (ap_phi_mux_indvar_flatten_phi_fu_376_p4 + 10'd1);

assign j_1_fu_848_p2 = (j_mid2_reg_1093 + 5'd1);

assign j_mid2_fu_615_p3 = ((exitcond_fu_609_p2[0:0] === 1'b1) ? 5'd1 : ap_phi_mux_j_phi_fu_398_p4);

assign kernel3_fu_419_p4 = {{kernel[31:2]}};

assign kernel4_sum1_cast_fu_479_p1 = kernel4_sum1_fu_473_p2;

assign kernel4_sum1_fu_473_p2 = (tmp_19_cast_fu_433_p1 + 31'd2);

assign kernel4_sum2_cast_fu_495_p1 = kernel4_sum2_fu_489_p2;

assign kernel4_sum2_fu_489_p2 = (tmp_19_cast_fu_433_p1 + 31'd3);

assign kernel4_sum3_cast_fu_511_p1 = kernel4_sum3_fu_505_p2;

assign kernel4_sum3_fu_505_p2 = (tmp_19_cast_fu_433_p1 + 31'd4);

assign kernel4_sum4_cast_fu_527_p1 = kernel4_sum4_fu_521_p2;

assign kernel4_sum4_fu_521_p2 = (tmp_19_cast_fu_433_p1 + 31'd5);

assign kernel4_sum5_cast_fu_543_p1 = kernel4_sum5_fu_537_p2;

assign kernel4_sum5_fu_537_p2 = (tmp_19_cast_fu_433_p1 + 31'd6);

assign kernel4_sum6_cast_fu_559_p1 = kernel4_sum6_fu_553_p2;

assign kernel4_sum6_fu_553_p2 = (tmp_19_cast_fu_433_p1 + 31'd7);

assign kernel4_sum7_cast_fu_575_p1 = kernel4_sum7_fu_569_p2;

assign kernel4_sum7_fu_569_p2 = (tmp_19_cast_fu_433_p1 + 31'd8);

assign kernel4_sum_cast_fu_463_p1 = kernel4_sum_fu_457_p2;

assign kernel4_sum_fu_457_p2 = (tmp_19_cast_fu_433_p1 + 31'd1);

assign out6_sum_cast_fu_974_p1 = out6_sum_reg_1341;

assign out6_sum_fu_965_p2 = (tmp_34_cast_fu_962_p1 + tmp_3_cast_reg_1012);

assign p_shl1_fu_660_p1 = tmp_4_fu_653_p3;

assign p_shl2_fu_671_p1 = tmp_19_fu_664_p3;

assign p_shl7_fu_753_p1 = tmp_26_fu_746_p3;

assign p_shl8_fu_714_p1 = tmp_22_fu_707_p3;

assign p_shl9_fu_725_p1 = tmp_23_fu_718_p3;

assign p_shl_fu_742_p1 = tmp_25_fu_735_p3;

assign tmp1_fu_931_p2 = (tmp2_reg_1236 + tmp3_fu_927_p2);

assign tmp2_fu_915_p2 = (tmp_9_reg_1221 + tmp_7_reg_1206);

assign tmp3_fu_927_p2 = (tmp_12_reg_1256 + tmp_11_reg_1241);

assign tmp4_fu_993_p2 = (tmp5_reg_1306 + tmp6_fu_988_p2);

assign tmp5_fu_944_p2 = (tmp_14_reg_1291 + tmp_13_reg_1276);

assign tmp6_fu_988_p2 = (tmp_15_reg_1311 + tmp7_fu_984_p2);

assign tmp7_fu_984_p2 = (tmp_17_reg_1346 + tmp_16_reg_1326);

assign tmp_11_fu_919_p2 = ($signed(gmem_addr_2_read_reg_1231) * $signed(gmem_addr_16_read_reg_1226));

assign tmp_12_fu_923_p2 = ($signed(gmem_addr_3_read_reg_1251) * $signed(gmem_addr_10_read_reg_1246));

assign tmp_13_fu_936_p2 = ($signed(gmem_addr_4_read_reg_1266) * $signed(gmem_addr_14_read_reg_1261));

assign tmp_14_fu_940_p2 = ($signed(gmem_addr_5_read_reg_1286) * $signed(gmem_addr_17_read_reg_1281));

assign tmp_15_fu_948_p2 = ($signed(gmem_addr_6_read_reg_1301) * $signed(gmem_addr_11_read_reg_1296));

assign tmp_16_fu_952_p2 = ($signed(gmem_addr_7_read_reg_1321) * $signed(gmem_addr_15_read_reg_1316));

assign tmp_17_fu_970_p2 = ($signed(gmem_addr_8_read_reg_1336) * $signed(gmem_addr_18_read_reg_1331));

assign tmp_18_fu_998_p2 = (tmp1_reg_1271 + tmp4_fu_993_p2);

assign tmp_19_cast_fu_433_p1 = kernel3_fu_419_p4;

assign tmp_19_fu_664_p3 = {{tmp_1_mid2_reg_1100}, {2'd0}};

assign tmp_1_fu_405_p4 = {{out_r[31:2]}};

assign tmp_1_mid2_fu_623_p3 = ((exitcond_fu_609_p2[0:0] === 1'b1) ? ap_phi_mux_i_phi_fu_387_p4 : tmp_fu_585_p2);

assign tmp_20_fu_675_p2 = (p_shl1_fu_660_p1 - p_shl2_fu_671_p1);

assign tmp_22_fu_707_p3 = {{tmp_2_mid2_reg_1107}, {5'd0}};

assign tmp_23_fu_718_p3 = {{tmp_2_mid2_reg_1107}, {2'd0}};

assign tmp_24_fu_729_p2 = (p_shl8_fu_714_p1 - p_shl9_fu_725_p1);

assign tmp_25_fu_735_p3 = {{tmp_4_mid2_reg_1114}, {5'd0}};

assign tmp_26_fu_746_p3 = {{tmp_4_mid2_reg_1114}, {2'd0}};

assign tmp_27_fu_757_p2 = (p_shl_fu_742_p1 - p_shl7_fu_753_p1);

assign tmp_28_fu_690_p2 = (tmp_20_fu_675_p2 + tmp_6_fu_686_p1);

assign tmp_29_fu_763_p2 = (tmp_24_fu_729_p2 + tmp_6_reg_1131);

assign tmp_2_fu_429_p1 = kernel3_fu_419_p4;

assign tmp_2_mid2_fu_631_p3 = ((exitcond_fu_609_p2[0:0] === 1'b1) ? i_1_fu_591_p2 : ap_phi_mux_i_phi_fu_387_p4);

assign tmp_30_fu_779_p2 = (tmp_27_fu_757_p2 + tmp_6_reg_1131);

assign tmp_32_fu_798_p2 = (tmp_20_reg_1120 + tmp_8_fu_795_p1);

assign tmp_33_fu_814_p2 = (tmp_24_fu_729_p2 + tmp_8_fu_795_p1);

assign tmp_34_cast_fu_962_p1 = grp_fu_1003_p3;

assign tmp_34_fu_831_p2 = (tmp_27_fu_757_p2 + tmp_8_fu_795_p1);

assign tmp_35_fu_857_p2 = (tmp_20_reg_1120 + tmp_s_fu_853_p1);

assign tmp_36_fu_873_p2 = (tmp_24_fu_729_p2 + tmp_s_fu_853_p1);

assign tmp_37_fu_890_p2 = (tmp_27_fu_757_p2 + tmp_s_fu_853_p1);

assign tmp_3_cast_fu_415_p1 = tmp_1_fu_405_p4;

assign tmp_3_fu_453_p1 = A1_fu_443_p4;

assign tmp_4_fu_653_p3 = {{tmp_1_mid2_reg_1100}, {5'd0}};

assign tmp_4_mid2_fu_645_p3 = ((exitcond_fu_609_p2[0:0] === 1'b1) ? i_1_mid1_fu_639_p2 : i_1_fu_591_p2);

assign tmp_5_fu_681_p2 = ($signed(j_mid2_reg_1093) + $signed(5'd31));

assign tmp_6_fu_686_p1 = tmp_5_fu_681_p2;

assign tmp_7_fu_907_p2 = ($signed(gmem_addr_read_reg_1201) * $signed(gmem_addr_9_read_reg_1196));

assign tmp_8_fu_795_p1 = j_mid2_reg_1093;

assign tmp_9_fu_911_p2 = ($signed(gmem_addr_1_read_reg_1216) * $signed(gmem_addr_13_read_reg_1211));

assign tmp_fu_585_p2 = ($signed(ap_phi_mux_i_phi_fu_387_p4) + $signed(5'd31));

assign tmp_s_fu_853_p1 = j_1_fu_848_p2;

always @ (posedge ap_clk) begin
    tmp_3_cast_reg_1012[30] <= 1'b0;
    gmem_addr_reg_1017[31:30] <= 2'b00;
    tmp_3_reg_1023[63:30] <= 34'b0000000000000000000000000000000000;
    gmem_addr_1_reg_1036[31] <= 1'b0;
    gmem_addr_2_reg_1042[31] <= 1'b0;
    gmem_addr_3_reg_1048[31] <= 1'b0;
    gmem_addr_4_reg_1054[31] <= 1'b0;
    gmem_addr_5_reg_1060[31] <= 1'b0;
    gmem_addr_6_reg_1066[31] <= 1'b0;
    gmem_addr_7_reg_1072[31] <= 1'b0;
    gmem_addr_8_reg_1078[31] <= 1'b0;
    tmp_20_reg_1120[1:0] <= 2'b00;
    tmp_6_reg_1131[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //conv
